{"ast":null,"code":"import axios from'axios';// Create axios instance with default config\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:3001/api',timeout:120000,// 2 minutes timeout for BOM generation\nheaders:{'Content-Type':'application/json'}});// Request interceptor to add auth tokens if needed\napi.interceptors.request.use(config=>{// Add auth token if available\nconst token=localStorage.getItem('authToken');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2;// Handle common errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Unauthorized - redirect to login if needed\nlocalStorage.removeItem('authToken');}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===429){// Rate limit exceeded\nconsole.warn('Rate limit exceeded:',error.response.data);}else if(error.code==='ECONNABORTED'){// Timeout error\nerror.message='Request timeout - please try again';}return Promise.reject(error);});// API functions\n/**\n * Get available LLM providers\n */export const getLLMProviders=async()=>{const response=await api.get('/llm-providers');return response.data;};/**\n * Generate BOM from requirements\n */export const generateBOM=async requestData=>{const response=await api.post('/generate-bom',requestData,{responseType:requestData.followUpAnswers?'json':'json'// Always use json initially to check response\n});// Always return JSON data - let the component handle blob conversion if needed\nreturn response.data;};/**\n * Upload and parse document\n */export const uploadDocument=async formData=>{const response=await api.post('/upload-document',formData,{headers:{'Content-Type':'multipart/form-data'},timeout:60000// 1 minute timeout for document processing\n});return response.data;};/**\n * Get OCI service categories\n */export const getOCICategories=async()=>{const response=await api.get('/oci-categories');return response.data;};/**\n * Health check\n */export const healthCheck=async()=>{const response=await api.get('/health');return response.data;};// Utility functions\n/**\n * Download file from blob data\n */export const downloadFile=(blob,filename)=>{const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);};/**\n * Format file size\n */export const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};/**\n * Validate file type\n */export const validateFileType=file=>{const allowedTypes=['application/pdf','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.wordprocessingml.document','application/msword','image/jpeg','image/png','image/bmp','image/tiff'];const allowedExtensions=['.pdf','.xlsx','.xls','.docx','.doc','.jpg','.jpeg','.png','.bmp','.tiff'];const fileExtension='.'+file.name.split('.').pop().toLowerCase();return{isValid:allowedTypes.includes(file.type)&&allowedExtensions.includes(fileExtension),allowedTypes:allowedExtensions};};/**\n * Retry function with exponential backoff\n */export const retryWithBackoff=async function(fn){let maxRetries=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;let retries=0;while(retries<maxRetries){try{return await fn();}catch(error){var _error$response3;if(retries===maxRetries-1||((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)<500){throw error;}const delay=Math.pow(2,retries)*1000;// Exponential backoff\nawait new Promise(resolve=>setTimeout(resolve,delay));retries++;}}};/**\n * Check if API is available\n */export const checkAPIHealth=async()=>{try{await healthCheck();return true;}catch(error){console.error('API health check failed:',error);return false;}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","removeItem","console","warn","data","code","message","getLLMProviders","get","generateBOM","requestData","post","responseType","followUpAnswers","uploadDocument","formData","getOCICategories","healthCheck","downloadFile","blob","filename","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","validateFileType","file","allowedTypes","allowedExtensions","fileExtension","name","split","pop","toLowerCase","isValid","includes","type","retryWithBackoff","fn","maxRetries","arguments","length","undefined","retries","_error$response3","delay","resolve","setTimeout","checkAPIHealth"],"sources":["/Users/NSaini/Documents/Documents - navdeep-saini-centroid-m1/datascience/coursera/Claude Code-Software Engineering with Generative AI Agents/oci-bom-generator/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 120000, // 2 minutes timeout for BOM generation\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth tokens if needed\napi.interceptors.request.use(\n  (config) => {\n    // Add auth token if available\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle common errors\n    if (error.response?.status === 401) {\n      // Unauthorized - redirect to login if needed\n      localStorage.removeItem('authToken');\n    } else if (error.response?.status === 429) {\n      // Rate limit exceeded\n      console.warn('Rate limit exceeded:', error.response.data);\n    } else if (error.code === 'ECONNABORTED') {\n      // Timeout error\n      error.message = 'Request timeout - please try again';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API functions\n\n/**\n * Get available LLM providers\n */\nexport const getLLMProviders = async () => {\n  const response = await api.get('/llm-providers');\n  return response.data;\n};\n\n/**\n * Generate BOM from requirements\n */\nexport const generateBOM = async (requestData) => {\n  const response = await api.post('/generate-bom', requestData, {\n    responseType: requestData.followUpAnswers ? 'json' : 'json', // Always use json initially to check response\n  });\n  \n  // Always return JSON data - let the component handle blob conversion if needed\n  return response.data;\n};\n\n/**\n * Upload and parse document\n */\nexport const uploadDocument = async (formData) => {\n  const response = await api.post('/upload-document', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    timeout: 60000, // 1 minute timeout for document processing\n  });\n  return response.data;\n};\n\n/**\n * Get OCI service categories\n */\nexport const getOCICategories = async () => {\n  const response = await api.get('/oci-categories');\n  return response.data;\n};\n\n/**\n * Health check\n */\nexport const healthCheck = async () => {\n  const response = await api.get('/health');\n  return response.data;\n};\n\n// Utility functions\n\n/**\n * Download file from blob data\n */\nexport const downloadFile = (blob, filename) => {\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\n/**\n * Format file size\n */\nexport const formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n/**\n * Validate file type\n */\nexport const validateFileType = (file) => {\n  const allowedTypes = [\n    'application/pdf',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/msword',\n    'image/jpeg',\n    'image/png',\n    'image/bmp',\n    'image/tiff'\n  ];\n\n  const allowedExtensions = ['.pdf', '.xlsx', '.xls', '.docx', '.doc', '.jpg', '.jpeg', '.png', '.bmp', '.tiff'];\n  \n  const fileExtension = '.' + file.name.split('.').pop().toLowerCase();\n  \n  return {\n    isValid: allowedTypes.includes(file.type) && allowedExtensions.includes(fileExtension),\n    allowedTypes: allowedExtensions\n  };\n};\n\n/**\n * Retry function with exponential backoff\n */\nexport const retryWithBackoff = async (fn, maxRetries = 3) => {\n  let retries = 0;\n  \n  while (retries < maxRetries) {\n    try {\n      return await fn();\n    } catch (error) {\n      if (retries === maxRetries - 1 || error.response?.status < 500) {\n        throw error;\n      }\n      \n      const delay = Math.pow(2, retries) * 1000; // Exponential backoff\n      await new Promise(resolve => setTimeout(resolve, delay));\n      retries++;\n    }\n  }\n};\n\n/**\n * Check if API is available\n */\nexport const checkAPIHealth = async () => {\n  try {\n    await healthCheck();\n    return true;\n  } catch (error) {\n    console.error('API health check failed:', error);\n    return false;\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}